name: Workflow 5 - All unit tests and rest tests on commit into production

on: 
  pull_request:
    branches: 
    - master
    paths:
    - 'src/**'
    - 'pom.xml'

  workflow_dispatch:

jobs:
  test-all:
    name: Build Java project and run all tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code on the runner
      uses: actions/checkout@v3

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-    

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Generate tag
      run: echo "tag=$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)" >> $GITHUB_OUTPUT
      id: project

    - name: Login to DockerHub
      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag Docker image with the latest release
      run: |
          latest_release_branch=$(git for-each-ref --format='%(refname:short)' refs/heads/release/* | sort -V | tail -1)
          latest_release_version=$(echo $latest_release_branch | sed 's/release\///g')
          IMAGE_VERSION=${{ steps.project.outputs.tag }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:$latest_release_version
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:$latest_release_version ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:latest

    - name: Run e2e tests
      run: |
          docker run -d -p 8081:8080 --name books-reviewer ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:latest
          mvn -B -Dtest=*SeleniumTest test -Dport=8081

    - name: Push Docker image to DockerHub
      run:  docker push ${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:latest

    - name: Login to GitHub Packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Tag and push Docker image to GitHub Container Registry
      run: |
          IMAGE_VERSION=${{ steps.project.outputs.tag }}
          IMAGE_USER=$(echo ${{ github.repository_owner }} | awk '{print tolower($0)}')
          latest_release_branch=$(git for-each-ref --format='%(refname:short)' refs/heads/release/* | sort -V | tail -1)
          latest_release_version=$(echo $latest_release_branch | sed 's/release\///g')
          docker pull ghcr.io/$IMAGE_USER/books-reviewer:$latest_release_version
          docker tag ghcr.io/$IMAGE_USER/books-reviewer:$latest_release_version ghcr.io/$IMAGE_USER/books-reviewer:latest
          docker push ghcr.io/$IMAGE_USER/books-reviewer:latest
